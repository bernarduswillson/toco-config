version: '3.3'
services:

  react:
    ports:
      - "3000:3000"
    volumes:
      - ../toco-spa:/react-app
    build:
      context: ../toco-spa
      dockerfile: Dockerfile
    # environment:
    #   - REACT_APP_API_URL=http://localhost:8080/api

  php:
    ports:
      - 8008:80
    volumes:
      - ../toco-app:/var/www/html
    build:
      context: ../toco-app
      dockerfile: Dockerfile
    environment:
      - UPLOAD_LIMIT=10M
      - DB_HOST=postgresql1

  postgresql1:
    image: postgres:latest
    ports:
      - "5433:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB1}
    volumes:
      - "../toco-app/db:/docker-entrypoint-initdb.d"
    restart: always

  postgresql2:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB2}
    volumes:
      - "../toco-rest/prisma/migrations/db:/docker-entrypoint-initdb.d"
    restart: always

  express:
    image: node:latest
    build: 
      context: ../toco-rest
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      - postgresql2
    environment:
      DATABASE_URL: postgres://postgres:${DB_PASSWORD}@postgresql2:5432/${DB2}
      JWT_SECRET: ${JWT_SECRET}